<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.7.3@38c452ae584467e939d55377aaf83b5a26f19dd1">
  <file src="src/PHPUnit/Controller/AbstractConsoleControllerTestCase.php">
    <InternalClass occurrences="2"/>
    <MixedArgument occurrences="5">
      <code>$response-&gt;getContent()</code>
      <code>$response-&gt;getContent()</code>
      <code>$response-&gt;getContent()</code>
      <code>$response-&gt;getContent()</code>
      <code>$response-&gt;getContent()</code>
    </MixedArgument>
  </file>
  <file src="src/PHPUnit/Controller/AbstractControllerTestCase.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$type</code>
    </ArgumentTypeCoercion>
    <InternalClass occurrences="25">
      <code>new ExpectationFailedException($this-&gt;createFailureMessage('No route matched'))</code>
      <code>new ExpectationFailedException($this-&gt;createFailureMessage('No route matched'))</code>
      <code>new ExpectationFailedException($this-&gt;createFailureMessage('No route matched'))</code>
      <code>new ExpectationFailedException($this-&gt;createFailureMessage('No route matched'))</code>
      <code>new ExpectationFailedException($this-&gt;createFailureMessage('No route matched'))</code>
      <code>new ExpectationFailedException($this-&gt;createFailureMessage('No route matched'))</code>
      <code>new ExpectationFailedException($this-&gt;createFailureMessage('No route matched'))</code>
    </InternalClass>
    <LessSpecificReturnStatement occurrences="1">
      <code>$this-&gt;getApplication()-&gt;getServiceManager()</code>
    </LessSpecificReturnStatement>
    <MissingClosureParamType occurrences="1">
      <code>$r</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="1">
      <code>function ($r) use ($event) {</code>
    </MissingClosureReturnType>
    <MissingConstructor occurrences="15">
      <code>$application</code>
      <code>$application</code>
      <code>$application</code>
      <code>$application</code>
      <code>$application</code>
      <code>$applicationConfig</code>
      <code>$applicationConfig</code>
      <code>$applicationConfig</code>
      <code>$applicationConfig</code>
      <code>$applicationConfig</code>
      <code>$usedConsoleBackup</code>
      <code>$usedConsoleBackup</code>
      <code>$usedConsoleBackup</code>
      <code>$usedConsoleBackup</code>
      <code>$usedConsoleBackup</code>
    </MissingConstructor>
    <MissingReturnType occurrences="21">
      <code>assertActionName</code>
      <code>assertApplicationException</code>
      <code>assertControllerClass</code>
      <code>assertControllerName</code>
      <code>assertMatchedRouteName</code>
      <code>assertModuleName</code>
      <code>assertModulesLoaded</code>
      <code>assertNoMatchedRoute</code>
      <code>assertNotActionName</code>
      <code>assertNotControllerClass</code>
      <code>assertNotControllerName</code>
      <code>assertNotMatchedRouteName</code>
      <code>assertNotModuleName</code>
      <code>assertNotModulesLoaded</code>
      <code>assertNotResponseStatusCode</code>
      <code>assertNotTemplateName</code>
      <code>assertResponseStatusCode</code>
      <code>assertTemplateName</code>
      <code>dispatch</code>
      <code>setUpCompat</code>
      <code>tearDownCompat</code>
    </MissingReturnType>
    <MixedArgument occurrences="19">
      <code>$child</code>
      <code>$controllerClass</code>
      <code>$event</code>
      <code>$event</code>
      <code>$match</code>
      <code>$match</code>
      <code>$match</code>
      <code>$match</code>
      <code>$match</code>
      <code>$match</code>
      <code>$match</code>
      <code>$method</code>
      <code>$modulesLoaded</code>
      <code>$modulesLoaded</code>
      <code>$post</code>
      <code>$query</code>
      <code>$query</code>
      <code>$viewModel</code>
      <code>$viewModel</code>
    </MixedArgument>
    <MixedAssignment occurrences="32">
      <code>$child</code>
      <code>$controllerClass</code>
      <code>$controllerIdentifier</code>
      <code>$controllerManager</code>
      <code>$event</code>
      <code>$exception</code>
      <code>$headers</code>
      <code>$match</code>
      <code>$match</code>
      <code>$match</code>
      <code>$match</code>
      <code>$match</code>
      <code>$match</code>
      <code>$match</code>
      <code>$match</code>
      <code>$method</code>
      <code>$moduleManager</code>
      <code>$moduleManager</code>
      <code>$modulesLoaded</code>
      <code>$modulesLoaded</code>
      <code>$post</code>
      <code>$query</code>
      <code>$requestMethod</code>
      <code>$routeMatch</code>
      <code>$routeMatch</code>
      <code>$routeMatch</code>
      <code>$routeMatch</code>
      <code>$routeMatch</code>
      <code>$routeMatch</code>
      <code>$routeMatch</code>
      <code>$viewModel</code>
      <code>$viewModel</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="2">
      <code>ResponseInterface</code>
      <code>int</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="32">
      <code>addHeaderLine</code>
      <code>detach</code>
      <code>exchangeArray</code>
      <code>get</code>
      <code>getError</code>
      <code>getMatchedRouteName</code>
      <code>getMatchedRouteName</code>
      <code>getMatchedRouteName</code>
      <code>getModules</code>
      <code>getModules</code>
      <code>getParam</code>
      <code>getParam</code>
      <code>getParam</code>
      <code>getParam</code>
      <code>getParam</code>
      <code>getParam</code>
      <code>getParam</code>
      <code>getResponse</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getViewModel</code>
      <code>getViewModel</code>
      <code>setName</code>
      <code>setParam</code>
      <code>toArray</code>
      <code>toArray</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="3">
      <code>$match</code>
      <code>$response-&gt;getStatusCode()</code>
      <code>$this-&gt;getApplication()-&gt;getMvcEvent()-&gt;getResponse()</code>
    </MixedReturnStatement>
    <MoreSpecificReturnType occurrences="1">
      <code>ServiceManager</code>
    </MoreSpecificReturnType>
    <PossiblyFalseArgument occurrences="2">
      <code>strpos($controllerClass, '\\')</code>
      <code>strpos($controllerClass, '\\')</code>
    </PossiblyFalseArgument>
    <PossiblyFalseOperand occurrences="2">
      <code>strrpos($controllerClass, '\\')</code>
      <code>strrpos($controllerClass, '\\')</code>
    </PossiblyFalseOperand>
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(bool) $boolean</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType occurrences="4">
      <code>$this-&gt;application</code>
      <code>null !== $this-&gt;application</code>
      <code>null !== $this-&gt;application &amp;&amp; null !== $this-&gt;applicationConfig</code>
      <code>null !== $this-&gt;applicationConfig</code>
    </RedundantConditionGivenDocblockType>
    <TooManyArguments occurrences="1">
      <code>getTemplate</code>
    </TooManyArguments>
    <UndefinedInterfaceMethod occurrences="27">
      <code>getErrorLevel</code>
      <code>getHeaders</code>
      <code>getMethod</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getPost</code>
      <code>getQuery</code>
      <code>getStatusCode</code>
      <code>params</code>
      <code>setMethod</code>
      <code>setPost</code>
      <code>setQuery</code>
      <code>setRequestUri</code>
      <code>setUri</code>
    </UndefinedInterfaceMethod>
    <UndefinedMethod occurrences="1">
      <code>setExpectedException</code>
    </UndefinedMethod>
  </file>
  <file src="src/PHPUnit/Controller/AbstractHttpControllerTestCase.php">
    <InternalClass occurrences="34"/>
    <InvalidReturnStatement occurrences="1">
      <code>$this-&gt;query($path, true)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>array</code>
    </InvalidReturnType>
    <MissingReturnType occurrences="44">
      <code>assertHasResponseHeader</code>
      <code>assertNotHasResponseHeader</code>
      <code>assertNotQuery</code>
      <code>assertNotQueryContentContains</code>
      <code>assertNotQueryContentRegex</code>
      <code>assertNotQueryCount</code>
      <code>assertNotRedirect</code>
      <code>assertNotRedirectRegex</code>
      <code>assertNotRedirectTo</code>
      <code>assertNotResponseHeaderContains</code>
      <code>assertNotResponseHeaderRegex</code>
      <code>assertNotXpathQuery</code>
      <code>assertNotXpathQueryContentContains</code>
      <code>assertNotXpathQueryContentRegex</code>
      <code>assertNotXpathQueryCount</code>
      <code>assertQuery</code>
      <code>assertQueryContentContains</code>
      <code>assertQueryContentRegex</code>
      <code>assertQueryCount</code>
      <code>assertQueryCountMax</code>
      <code>assertQueryCountMin</code>
      <code>assertRedirect</code>
      <code>assertRedirectRegex</code>
      <code>assertRedirectTo</code>
      <code>assertResponseHeaderContains</code>
      <code>assertResponseHeaderRegex</code>
      <code>assertResponseReasonPhrase</code>
      <code>assertXpathQuery</code>
      <code>assertXpathQueryContentContains</code>
      <code>assertXpathQueryContentRegex</code>
      <code>assertXpathQueryCount</code>
      <code>assertXpathQueryCountMax</code>
      <code>assertXpathQueryCountMin</code>
      <code>notQueryAssertion</code>
      <code>notQueryContentContainsAssertion</code>
      <code>notQueryContentRegexAssertion</code>
      <code>notQueryCountAssertion</code>
      <code>queryAssertion</code>
      <code>queryContentContainsAssertion</code>
      <code>queryContentRegexAssertion</code>
      <code>queryCountAssertion</code>
      <code>queryCountMaxAssertion</code>
      <code>queryCountMinAssertion</code>
      <code>registerXpathNamespaces</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$currentHeader-&gt;getFieldValue()</code>
      <code>$currentHeader-&gt;getFieldValue()</code>
      <code>$response-&gt;getContent()</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$currentValue</code>
      <code>$headers</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>HeaderInterface|false</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="5">
      <code>get</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
      <code>getFieldValue</code>
    </MixedMethodCall>
    <MixedPropertyFetch occurrences="1">
      <code>$node-&gt;nodeValue</code>
    </MixedPropertyFetch>
    <MixedReturnStatement occurrences="1">
      <code>$headers-&gt;get($header, false)</code>
    </MixedReturnStatement>
    <PossiblyUndefinedVariable occurrences="5">
      <code>$currentHeader</code>
      <code>$currentHeader</code>
      <code>$currentHeader</code>
      <code>$currentHeader</code>
      <code>$node</code>
    </PossiblyUndefinedVariable>
    <RedundantCondition occurrences="5">
      <code>assertFalse</code>
      <code>assertFalse</code>
      <code>assertFalse</code>
      <code>assertTrue</code>
      <code>assertTrue</code>
    </RedundantCondition>
    <UndefinedInterfaceMethod occurrences="2">
      <code>getHeaders</code>
      <code>getReasonPhrase</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Util/ModuleLoader.php">
    <MixedArgument occurrences="1">
      <code>$smConfig</code>
    </MixedArgument>
    <MixedAssignment occurrences="4">
      <code>$configuration['module_listener_options']['module_paths'][$key]</code>
      <code>$configuration['modules'][]</code>
      <code>$module</code>
      <code>$smConfig</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="2">
      <code>Application</code>
      <code>ModuleManager</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="1">
      <code>loadModules</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="2">
      <code>$this-&gt;getServiceManager()-&gt;get('Application')</code>
      <code>$this-&gt;getServiceManager()-&gt;get('ModuleManager')</code>
    </MixedReturnStatement>
  </file>
  <file src="test/ExpectedExceptionTrait.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$exceptionClass</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="test/PHPUnit/Controller/AbstractConsoleControllerTestCaseTest.php">
    <InternalMethod occurrences="1">
      <code>parent::setUpCompat()</code>
    </InternalMethod>
    <MissingReturnType occurrences="12">
      <code>setUpCompat</code>
      <code>testAssertConsoleOutputContains</code>
      <code>testAssertMatchedArgumentsWithLiteralFlags</code>
      <code>testAssertMatchedArgumentsWithMandatoryValue</code>
      <code>testAssertMatchedArgumentsWithValue</code>
      <code>testAssertMatchedArgumentsWithValueWithoutEqualsSign</code>
      <code>testAssertNotResponseStatusCode</code>
      <code>testAssertNotResponseStatusCodeWithBadCode</code>
      <code>testAssertResponseStatusCode</code>
      <code>testAssertResponseStatusCodeWithBadCode</code>
      <code>testNotAssertConsoleOutputContains</code>
      <code>testUseOfRouter</code>
    </MissingReturnType>
    <MixedAssignment occurrences="1">
      <code>$routeMatch</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="6">
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
      <code>getRouteMatch</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>assertNotNull</code>
      <code>assertNotNull</code>
    </RedundantConditionGivenDocblockType>
    <UndefinedDocblockClass occurrences="4">
      <code>$routeMatch</code>
      <code>$routeMatch</code>
      <code>$routeMatch</code>
      <code>$routeMatch</code>
    </UndefinedDocblockClass>
    <UndefinedInterfaceMethod occurrences="6">
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/PHPUnit/Controller/AbstractControllerTestCaseTest.php">
    <InternalMethod occurrences="4">
      <code>parent::setUpCompat()</code>
      <code>parent::setUpCompat()</code>
      <code>parent::tearDownCompat()</code>
      <code>parent::tearDownCompat()</code>
    </InternalMethod>
    <InvalidArgument occurrences="2">
      <code>$haystack</code>
      <code>$haystack</code>
    </InvalidArgument>
    <InvalidReturnType occurrences="1">
      <code>array&lt;string, array&lt;string|null&gt;&gt;</code>
    </InvalidReturnType>
    <MissingReturnType occurrences="13">
      <code>assertContainsCompat</code>
      <code>assertNotContainsCompat</code>
      <code>testAssertNotTemplateName</code>
      <code>testAssertTemplateName</code>
      <code>testCanHandleMultidimensionalParams</code>
      <code>testCustomResponseObject</code>
      <code>testDispatchWithNullParams</code>
      <code>testExplicityPutParamsOverrideRequestContent</code>
      <code>testPatchRequestParams</code>
      <code>testPreserveContentOfPatchRequest</code>
      <code>testQueryParamsDelete</code>
      <code>testRequestWithRouteParam</code>
      <code>testResetDoesNotCreateSessionIfNoSessionExists</code>
    </MissingReturnType>
    <MixedArgument occurrences="3">
      <code>$message</code>
      <code>$message</code>
      <code>$this-&gt;getRequest()-&gt;getContent()</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$config['module_listener_options']['cache_dir']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$config</code>
      <code>$file</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>Generator</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="4">
      <code>getError</code>
      <code>setParam</code>
      <code>setParam</code>
      <code>toString</code>
    </MixedMethodCall>
    <MixedOperand occurrences="1">
      <code>$config</code>
    </MixedOperand>
    <PossiblyUndefinedVariable occurrences="2">
      <code>$message</code>
      <code>$message</code>
    </PossiblyUndefinedVariable>
    <UndefinedInterfaceMethod occurrences="12">
      <code>getMethod</code>
      <code>getMethod</code>
      <code>getMethod</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getQuery</code>
      <code>getRequestUri</code>
      <code>setMethod</code>
      <code>setMethod</code>
      <code>setMethod</code>
      <code>setMethod</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="test/PHPUnit/Controller/AbstractHttpControllerTestCaseTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>'RuntimeException'</code>
    </ArgumentTypeCoercion>
    <InternalMethod occurrences="1">
      <code>parent::setUpCompat()</code>
    </InternalMethod>
    <MissingReturnType occurrences="65">
      <code>setUpCompat</code>
      <code>testAssertApplicationEvents</code>
      <code>testAssertApplicationMvcEvent</code>
      <code>testAssertExceptionAndMessageInAction</code>
      <code>testAssertExceptionInAction</code>
      <code>testAssertHasResponseHeader</code>
      <code>testAssertNotHasResponseHeader</code>
      <code>testAssertNotQuery</code>
      <code>testAssertNotQueryContentContains</code>
      <code>testAssertNotQueryContentRegex</code>
      <code>testAssertNotQueryCount</code>
      <code>testAssertNotRedirect</code>
      <code>testAssertNotRedirectRegex</code>
      <code>testAssertNotRedirectTo</code>
      <code>testAssertNotResponseHeaderContains</code>
      <code>testAssertNotResponseHeaderContainsMultipleHeaderInterface</code>
      <code>testAssertNotResponseHeaderRegex</code>
      <code>testAssertNotResponseHeaderRegexMultipleHeaderInterface</code>
      <code>testAssertNotResponseStatusCode</code>
      <code>testAssertNotXpathQuery</code>
      <code>testAssertNotXpathQueryContentContains</code>
      <code>testAssertNotXpathQueryContentRegex</code>
      <code>testAssertNotXpathQueryCount</code>
      <code>testAssertQuery</code>
      <code>testAssertQueryContentContains</code>
      <code>testAssertQueryContentContainsWithSecondElement</code>
      <code>testAssertQueryContentRegex</code>
      <code>testAssertQueryContentRegexMultipleMatches</code>
      <code>testAssertQueryContentRegexMultipleMatchesNoFalsePositive</code>
      <code>testAssertQueryCount</code>
      <code>testAssertQueryCountMax</code>
      <code>testAssertQueryCountMin</code>
      <code>testAssertQueryWithDynamicPostParams</code>
      <code>testAssertQueryWithDynamicPostParamsInDispatchMethod</code>
      <code>testAssertQueryWithDynamicPutParamsInDispatchMethod</code>
      <code>testAssertQueryWithDynamicQueryParams</code>
      <code>testAssertQueryWithDynamicQueryParamsInDispatchMethod</code>
      <code>testAssertQueryWithDynamicQueryParamsInUrl</code>
      <code>testAssertQueryWithDynamicQueryParamsInUrlAnsPostInParams</code>
      <code>testAssertRedirect</code>
      <code>testAssertRedirectRegex</code>
      <code>testAssertRedirectTo</code>
      <code>testAssertResponseHeaderContains</code>
      <code>testAssertResponseHeaderContainsMultipleHeaderInterface</code>
      <code>testAssertResponseHeaderRegex</code>
      <code>testAssertResponseHeaderRegexMultipleHeaderInterface</code>
      <code>testAssertResponseReasonPhrase</code>
      <code>testAssertResponseStatusCode</code>
      <code>testAssertUriWithHostname</code>
      <code>testAssertWithEventShared</code>
      <code>testAssertWithMultiDispatch</code>
      <code>testAssertWithMultiDispatchWithPersistence</code>
      <code>testAssertWithMultiDispatchWithoutPersistence</code>
      <code>testAssertXmlHttpRequestDispatch</code>
      <code>testAssertXpathQuery</code>
      <code>testAssertXpathQueryContentContains</code>
      <code>testAssertXpathQueryContentRegex</code>
      <code>testAssertXpathQueryCount</code>
      <code>testAssertXpathQueryCountMax</code>
      <code>testAssertXpathQueryCountMin</code>
      <code>testAssertXpathQueryCountWithBadXpathUsage</code>
      <code>testAssertXpathQueryWithBadXpathUsage</code>
      <code>testGetErrorWithTraceErrorEnabled</code>
      <code>testTraceErrorEnableByDefault</code>
      <code>testUseOfRouter</code>
    </MissingReturnType>
    <MixedArgument occurrences="6">
      <code>$layout-&gt;getChildren()</code>
      <code>$messages</code>
      <code>$messages</code>
      <code>$messages</code>
      <code>$messages</code>
    </MixedArgument>
    <MixedAssignment occurrences="20">
      <code>$controller</code>
      <code>$controller</code>
      <code>$controller</code>
      <code>$controller</code>
      <code>$countListeners</code>
      <code>$exception</code>
      <code>$flashMessenger</code>
      <code>$flashMessenger</code>
      <code>$flashMessenger</code>
      <code>$flashMessenger</code>
      <code>$layout</code>
      <code>$messages</code>
      <code>$messages</code>
      <code>$messages</code>
      <code>$messages</code>
      <code>$mvcEvent</code>
      <code>$routeMatch</code>
      <code>$routeMatch</code>
      <code>$viewModel</code>
      <code>$viewModel</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="32">
      <code>flashMessenger</code>
      <code>flashMessenger</code>
      <code>flashMessenger</code>
      <code>flashMessenger</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>getApplication</code>
      <code>getChildren</code>
      <code>getError</code>
      <code>getListeners</code>
      <code>getListeners</code>
      <code>getMessages</code>
      <code>getMessages</code>
      <code>getMessages</code>
      <code>getMessages</code>
      <code>getParam</code>
      <code>getParam</code>
      <code>getParam</code>
      <code>getPort</code>
      <code>getResult</code>
      <code>getResult</code>
      <code>getRouteMatch</code>
      <code>getTemplate</code>
      <code>getTemplate</code>
      <code>getTemplate</code>
      <code>getViewModel</code>
      <code>setParam</code>
      <code>setParam</code>
      <code>setPost</code>
      <code>setQuery</code>
    </MixedMethodCall>
    <UndefinedInterfaceMethod occurrences="15">
      <code>getMethod</code>
      <code>getMethod</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getMvcEvent</code>
      <code>getUri</code>
      <code>isXmlHttpRequest</code>
      <code>isXmlHttpRequest</code>
      <code>isXmlHttpRequest</code>
      <code>setMethod</code>
      <code>setMethod</code>
    </UndefinedInterfaceMethod>
    <UnusedVariable occurrences="1">
      <code>$result</code>
    </UnusedVariable>
  </file>
  <file src="test/PHPUnit/Controller/MemoryLeakTest.php">
    <MissingReturnType occurrences="1">
      <code>setUpBeforeClassCompat</code>
    </MissingReturnType>
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
    <PossiblyNullOperand occurrences="1">
      <code>self::$memStart</code>
    </PossiblyNullOperand>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertNull</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="test/PHPUnit/ModuleDependenciesTest.php">
    <MissingReturnType occurrences="2">
      <code>testBadDependenciesModules</code>
      <code>testDependenciesModules</code>
    </MissingReturnType>
  </file>
  <file src="test/PHPUnit/Util/ModuleLoaderTest.php">
    <ArgumentTypeCoercion occurrences="6">
      <code>'Baz\Module'</code>
      <code>'Baz\Module'</code>
      <code>'Baz\Module'</code>
      <code>'Baz\Module'</code>
      <code>'Foo\Module'</code>
      <code>'stdClass'</code>
    </ArgumentTypeCoercion>
    <MixedAssignment occurrences="7">
      <code>$baz</code>
      <code>$baz</code>
      <code>$baz</code>
      <code>$baz</code>
      <code>$file</code>
      <code>$foo</code>
      <code>$fooObject</code>
    </MixedAssignment>
    <UnusedVariable occurrences="1">
      <code>$loader</code>
    </UnusedVariable>
  </file>
  <file src="test/_files/Baz/src/Baz/Controller/IndexController.php">
    <MixedAssignment occurrences="2">
      <code>$numGet</code>
      <code>$numPost</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="5">
      <code>addHeaderLine</code>
      <code>addHeaderLine</code>
      <code>addMessage</code>
      <code>get</code>
      <code>get</code>
    </MixedMethodCall>
    <MixedReturnTypeCoercion occurrences="2">
      <code>['num_get' =&gt; $numGet, 'num_post' =&gt; $numPost]</code>
      <code>array&lt;string, string&gt;</code>
    </MixedReturnTypeCoercion>
    <UndefinedInterfaceMethod occurrences="3">
      <code>getHeaders</code>
      <code>getPost</code>
      <code>getQuery</code>
    </UndefinedInterfaceMethod>
    <UndefinedMagicMethod occurrences="1">
      <code>flashMessenger</code>
    </UndefinedMagicMethod>
  </file>
  <file src="test/_files/ModuleWithEvents/Module.php">
    <MissingClosureParamType occurrences="1">
      <code>$e</code>
    </MissingClosureParamType>
    <PossiblyNullReference occurrences="2">
      <code>attach</code>
      <code>getMatchedRouteName</code>
    </PossiblyNullReference>
    <UnusedClosureParam occurrences="1">
      <code>$e</code>
    </UnusedClosureParam>
  </file>
  <file src="test/_files/modules-path/with-subdir/Bar/Module.php">
    <MissingClosureParamType occurrences="1">
      <code>$sm</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="1">
      <code>function ($sm) {</code>
    </MissingClosureReturnType>
    <MixedAssignment occurrences="1">
      <code>$foo</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>get</code>
    </MixedMethodCall>
    <MixedPropertyAssignment occurrences="1">
      <code>$foo</code>
    </MixedPropertyAssignment>
  </file>
  <file src="test/_files/modules-path/with-subdir/Foo/Module.php">
    <MissingClosureParamType occurrences="1">
      <code>$sm</code>
    </MissingClosureParamType>
    <UnusedClosureParam occurrences="1">
      <code>$sm</code>
    </UnusedClosureParam>
  </file>
</files>
